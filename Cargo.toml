[package]
name = "coe"
version = "0.2.0"
edition = "2021"
license = "MIT-0"
description = "coe is a full implementation of the CoEv2 protocol by Technische Alternative"
repository = "https://github.com/curatorsigma/coe-rs"
keywords = ["coe"]
categories = ["network-programming", "no-std", "no-std::no-alloc"]
authors = ["Jonathan Schleucher"]
readme = "README.md"

[lints.rust]
unsafe_code = "forbid"

[features]
default = []

# Implement std::error::Error for all Error types.
std = ["alloc"]

# Use Vec instead of statically sized buffer in Packet and implement Display for all Error types.
# Also adds the packets_from_payloads function
alloc = ["serde?/alloc"]

# Enable SerDe for all public types.
serde = ["dep:serde"]

[dependencies]
serde = { version = "1.0.210", optional = true, default-features = false, features = ["derive"] }

